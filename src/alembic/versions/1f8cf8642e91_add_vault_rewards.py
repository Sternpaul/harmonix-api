"""add_vault_rewards

Revision ID: 1f8cf8642e91
Revises: 051f0339f486
Create Date: 2024-10-10 10:16:38.880752

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = "1f8cf8642e91"
down_revision: Union[str, None] = "051f0339f486"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "vault_reward_history",
        sa.Column("id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("vault_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("earned_rewards", sa.Float(), nullable=True),
        sa.Column("unclaimed_rewards", sa.Float(), nullable=True),
        sa.Column("claimed_rewards", sa.Float(), nullable=True),
        sa.Column("datetime", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_vault_reward_history_datetime"),
        "vault_reward_history",
        ["datetime"],
        unique=False,
    )
    op.create_table(
        "vault_rewards",
        sa.Column("id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("vault_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("earned_rewards", sa.Float(), nullable=True),
        sa.Column("unclaimed_rewards", sa.Float(), nullable=True),
        sa.Column("claimed_rewards", sa.Float(), nullable=True),
        sa.Column("token_address", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("token_name", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "reward_distribution_history",
        sa.Column("id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("vault_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("partner_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("total_reward", sa.Float(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["vault_id"],
            ["vaults.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_reward_distribution_history_created_at"),
        "reward_distribution_history",
        ["created_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_reward_distribution_history_partner_name"),
        "reward_distribution_history",
        ["partner_name"],
        unique=False,
    )
    op.create_table(
        "user_rewards",
        sa.Column("id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("vault_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("wallet_address", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("total_reward", sa.Float(), nullable=False),
        sa.Column("partner_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("session_id", sqlmodel.sql.sqltypes.GUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["session_id"],
            ["reward_sessions.session_id"],
        ),
        sa.ForeignKeyConstraint(
            ["vault_id"],
            ["vaults.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_user_rewards_created_at"), "user_rewards", ["created_at"], unique=False
    )
    op.create_index(
        op.f("ix_user_rewards_partner_name"),
        "user_rewards",
        ["partner_name"],
        unique=False,
    )
    op.create_index(
        op.f("ix_user_rewards_updated_at"), "user_rewards", ["updated_at"], unique=False
    )
    op.create_index(
        op.f("ix_user_rewards_wallet_address"),
        "user_rewards",
        ["wallet_address"],
        unique=False,
    )
    op.create_table(
        "user_reward_audit",
        sa.Column("id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("user_points_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("old_value", sa.Float(), nullable=False),
        sa.Column("new_value", sa.Float(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_points_id"],
            ["user_rewards.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("user_reward_audit")
    op.drop_index(op.f("ix_user_rewards_wallet_address"), table_name="user_rewards")
    op.drop_index(op.f("ix_user_rewards_updated_at"), table_name="user_rewards")
    op.drop_index(op.f("ix_user_rewards_partner_name"), table_name="user_rewards")
    op.drop_index(op.f("ix_user_rewards_created_at"), table_name="user_rewards")
    op.drop_table("user_rewards")
    op.drop_index(
        op.f("ix_reward_distribution_history_partner_name"),
        table_name="reward_distribution_history",
    )
    op.drop_index(
        op.f("ix_reward_distribution_history_created_at"),
        table_name="reward_distribution_history",
    )
    op.drop_table("reward_distribution_history")
    op.drop_table("vault_rewards")
    op.drop_index(
        op.f("ix_vault_reward_history_datetime"), table_name="vault_reward_history"
    )
    op.drop_table("vault_reward_history")
    # ### end Alembic commands ###
